name: Build, Test, and Deploy Maven Project (Dockerized)

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 🧩 Step 1: Checkout source code
    - name: Checkout Repository
      uses: actions/checkout@v4

    # 🧩 Step 2: Setup Java 17
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # 🧩 Step 3: Clean and Build with Maven (force new JAR)
    - name: Clean and Build with Maven
      run: |
        mvn clean
        mvn package -DskipTests

    # 🧩 Step 4: Force rebuild Docker image (no cache)
    - name: Build Docker Image (force rebuild)
      run: docker build --no-cache -t welcomeapi:latest .

    # 🧩 Step 5: Save Docker image as tar for EC2 transfer
    - name: Save Docker Image as tar
      run: docker save welcomeapi:latest -o welcomeapi.tar

    # 🧩 Step 6: Deploy to EC2
    - name: Deploy to EC2 and Run Container
      env:
        HOST: ${{ secrets.EC2_HOST }}
        KEY: ${{ secrets.EC2_SSH_KEY }}
      run: |
        echo "$KEY" > key.pem
        chmod 600 key.pem

        echo "----- 📦 Transferring Docker image to EC2 -----"
        scp -o StrictHostKeyChecking=no -i key.pem welcomeapi.tar ec2-user@$HOST:/home/ec2-user/

        echo "----- 🔐 Connecting to EC2 and deploying -----"
        ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@$HOST << 'EOF'
        set -e

        echo "===== 🚀 Starting EC2 Deployment ====="

        # 🐳 Ensure Docker installed
        if ! command -v docker &> /dev/null; then
          echo "Installing Docker..."
          sudo dnf update -y
          sudo dnf install -y docker
          sudo systemctl enable docker
          sudo systemctl start docker
          sudo usermod -aG docker ec2-user
        fi

        # 🧹 Stop and remove old container if exists
        if [ "$(sudo docker ps -aq -f name=welcomeapi1)" ]; then
          echo "Stopping old container..."
          sudo docker stop welcomeapi1 || true
          echo "Removing old container..."
          sudo docker rm welcomeapi1 || true
        fi

        # 🧽 Remove old images to avoid cache reuse
        echo "Removing old images..."
        sudo docker rmi $(sudo docker images -q) || true

        # 📦 Load and run new image
        echo "Loading new Docker image..."
        sudo docker load -i /home/ec2-user/welcomeapi.tar

        echo "Starting new container..."
        sudo docker run -d -p 8080:8082 --name welcomeapi1 welcomeapi:latest

        echo "Cleaning up tar file..."
        rm -f /home/ec2-user/welcomeapi.tar

        echo "===== ✅ Deployment Completed Successfully! ====="
        EOF
