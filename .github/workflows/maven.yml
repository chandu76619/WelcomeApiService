name: Build, Test, and Deploy to Kubernetes on EC2 (Full Setup)

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Clean and Build with Maven
      run: |
        mvn clean package -DskipTests

    - name: Build Docker Image
      run: docker build -t welcomeapi:latest .

    - name: Save Docker Image as tar
      run: docker save welcomeapi:latest -o welcomeapi.tar

    - name: Transfer Image and YAML to EC2
      env:
        HOST: ${{ secrets.K8S_MASTER_HOST }}
        KEY: ${{ secrets.K8S_MASTER_KEY }}
      run: |
        echo "$KEY" > key.pem
        chmod 600 key.pem
        scp -o StrictHostKeyChecking=no -i key.pem welcomeapi.tar ec2-user@$HOST:/home/ec2-user/
        scp -o StrictHostKeyChecking=no -i key.pem k8s-deployment.yaml ec2-user@$HOST:/home/ec2-user/

    - name: Install and Deploy Kubernetes Cluster on EC2
      env:
        HOST: ${{ secrets.K8S_MASTER_HOST }}
        KEY: ${{ secrets.K8S_MASTER_KEY }}
      run: |
        echo "$KEY" > key.pem
        chmod 600 key.pem
        ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@$HOST << 'EOF'
        set -e
        echo "===== ⚙️ Setting up Kubernetes Cluster ====="

        # -----------------------------
        # Step 1: Install Dependencies
        # -----------------------------
        sudo yum update -y
        sudo yum install -y docker git curl wget
        sudo systemctl enable docker
        sudo systemctl start docker

        # Disable swap (required for kubeadm)
        sudo swapoff -a
        sudo sed -i '/swap/d' /etc/fstab

        # -----------------------------
        # Step 2: Install Kubernetes
        # -----------------------------
        if ! command -v kubeadm &> /dev/null
        then
          echo "Installing Kubernetes..."
          sudo bash -c 'cat <<EOF2 > /etc/yum.repos.d/kubernetes.repo
        [kubernetes]
        name=Kubernetes
        baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
        enabled=1
        gpgcheck=0
        repo_gpgcheck=0
        EOF2'

          sudo yum install -y kubelet kubeadm kubectl
          sudo systemctl enable kubelet
        else
          echo "Kubernetes already installed, skipping..."
        fi

        # -----------------------------
        # Step 3: Initialize Cluster
        # -----------------------------
        if [ ! -f /etc/kubernetes/admin.conf ]; then
          echo "Initializing Kubernetes control plane..."
          sudo kubeadm reset -f || true
          sudo kubeadm init --pod-network-cidr=192.168.0.0/16
          mkdir -p $HOME/.kube
          sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
          sudo chown $(id -u):$(id -g) $HOME/.kube/config

          # Apply Calico CNI network
          kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
        else
          echo "Kubernetes already initialized."
          mkdir -p $HOME/.kube
          sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
          sudo chown $(id -u):$(id -g) $HOME/.kube/config
        fi

        echo "===== ✅ Kubernetes Cluster Ready ====="
        kubectl get nodes -o wide

        # -----------------------------
        # Step 4: Load and Deploy App
        # -----------------------------
        echo "Loading Docker image..."
        sudo docker load -i /home/ec2-user/welcomeapi.tar

        echo "Applying Deployment..."
        kubectl apply -f /home/ec2-user/k8s-deployment.yaml

        echo "Waiting for rollout..."
        kubectl rollout status deployment/welcomeapi-deployment --timeout=120s

        echo "Deployment and Service Status:"
        kubectl get pods -o wide
        kubectl get svc welcomeapi-service

        echo "===== 🚀 Deployment Complete ====="
        EOF
